@model FrozenFoods.Core.Models.Order

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h3>Orders</h3>
    <hr />

    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        <label class="col-md-2 control-label">Created&nbsp;At</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2 control-label">Order&nbsp;Number</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2 control-label">First&nbsp;Name</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2 control-label">Last&nbsp;Name</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2 control-label">Zip&nbsp;Code</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
        </div>
    </div>
@if (Model.OrderStatus == "Rejected")
{
<div class="form-group">
    <label class="col-md-2 control-label">Order&nbsp;Status</label>
    <div class="col-md-10">
        @Html.EditorFor(model => model.OrderStatus, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })
    </div>
</div>
}
else
{
    <div class="form-group">
        <label class="col-md-2 control-label">Order&nbsp;Status</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.OrderStatus, new SelectList(ViewBag.statusList), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })
        </div>
    </div>
}
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
    @Html.Partial("OrderItems", Model.OrderItems)

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
