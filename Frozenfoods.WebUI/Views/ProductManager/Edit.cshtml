@model FrozenFoods.Core.ViewModel.ProductManagerViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Products</h2>


@using (Html.BeginForm("Edit", "ProductManager", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Product.Id)
    <input type="hidden" name="Image" value="@Model.Product.Image" />
        <div class="col-md-2">
            <img class="img-responsive" src="~/Content/ProductImages/@Model.Product.Image">
        </div>

        <div class="col-md-10">
            <div class="form-group">
                @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
                    <span class="text-danger">@ViewBag.Message</span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Price in &#8377;</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Product.Category, new SelectList(Model.ProductCategory, "Category", "Category"), new { @class = "form-control" } )
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Product.Unit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.Unit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-2 control-label">Total&nbsp;Quantity</label>
                <div class="col-md-10">
                   &nbsp;&nbsp; @Html.DisplayFor(model => model.Product.TotalQuantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.TotalQuantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="file" name="file" class="form-control" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
